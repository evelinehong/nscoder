{"arity": 3, "topK": 2, "pseudoCounts": 30.0, "aic": 1.0, "bs": 1000000, "topI": 300, "structurePenalty": 1.0, "CPUs": 2, "DSL": {"logVariable": 0.0, "productions": [{"expression": "if", "logProbability": 0.0}, {"expression": "fix1", "logProbability": 0.0}, {"expression": "fix2", "logProbability": 0.0}, {"expression": "gt?", "logProbability": 0.0}, {"expression": "incr", "logProbability": 0.0}, {"expression": "decr", "logProbability": 0.0}, {"expression": "0", "logProbability": 0.0}, {"expression": "1", "logProbability": 0.0}]}, "iterations": 99, "frontiers": [{"request": {"constructor": "->", "arguments": [{"constructor": "int", "arguments": []}, {"constructor": "->", "arguments": [{"constructor": "int", "arguments": []}, {"constructor": "int", "arguments": []}]}]}, "task": "add", "programs": [{"program": "(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if (gt? $0 0) ($2 (incr $1) (decr $0)) $1)))))))", "logLikelihood": 0.0}, {"program": "(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if (gt? $0 0) (incr ($2 $0 (decr $1))) $1)))))))", "logLikelihood": 0.0}, {"program": "(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if (gt? $0 0) (incr ($2 $1 (decr $0))) $1)))))))", "logLikelihood": 0.0}, {"program": "(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if (gt? $0 0) (incr ($2 (decr $0) $1)) $1)))))))", "logLikelihood": 0.0}, {"program": "(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if (gt? $1 0) ($2 (decr $1) (incr $0)) $0)))))))", "logLikelihood": 0.0}, {"program": "(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if (gt? $1 0) (incr ($2 $0 (decr $1))) $0)))))))", "logLikelihood": 0.0}, {"program": "(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if (gt? $1 0) (incr ($2 (decr $0) $1)) $0)))))))", "logLikelihood": 0.0}, {"program": "(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if (gt? $1 0) (incr ($2 (decr $1) $0)) $0)))))))", "logLikelihood": 0.0}, {"program": "(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if (gt? 1 $0) $1 ($2 (incr $1) (decr $0)))))))))", "logLikelihood": 0.0}, {"program": "(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if (gt? 1 $0) $1 (incr ($2 $0 (decr $1))))))))))", "logLikelihood": 0.0}]}, {"request": {"constructor": "->", "arguments": [{"constructor": "int", "arguments": []}, {"constructor": "->", "arguments": [{"constructor": "int", "arguments": []}, {"constructor": "int", "arguments": []}]}]}, "task": "minus", "programs": [{"program": "(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (decr (if (gt? $0 1) ($2 $1 (decr $0)) $1))))))))", "logLikelihood": 0.0}, {"program": "(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if (gt? 1 $0) $1 ($2 (decr $1) (decr $0)))))))))", "logLikelihood": 0.0}, {"program": "(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if (gt? 1 $0) $1 (decr ($2 $1 (decr $0))))))))))", "logLikelihood": 0.0}, {"program": "(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (decr (if (gt? 1 (decr $0)) $1 ($2 $1 (decr $0))))))))))", "logLikelihood": 0.0}, {"program": "(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if (gt? $0 (decr 1)) ($2 (decr $1) (decr $0)) $1)))))))", "logLikelihood": 0.0}, {"program": "(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if (gt? $0 (decr 1)) (decr ($2 $1 (decr $0))) $1)))))))", "logLikelihood": 0.0}, {"program": "(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if (gt? $0 1) ($2 (decr $1) (decr $0)) (decr $1))))))))", "logLikelihood": 0.0}, {"program": "(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if (gt? $0 1) (decr ($2 $1 (decr $0))) (decr $1))))))))", "logLikelihood": 0.0}]}]}